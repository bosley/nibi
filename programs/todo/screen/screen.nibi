(:= _width  0)
(:= _height 0)
(:= _display nil)

(fn setup [width height] [
  (assert (eq "int" (type width)) "Width value must be an integer")
  (assert (eq "int" (type height)) "Height value must be an integer")
  (assert (> width 0) "Width value must be greater than 0")
  (assert (> height 0) "Height value must be greater than 0")

  (set _width width)
  (set _height height)
  (set _display (<|> (<|> "." _width) _height))

  (<- true)
])

(fn draw [] [
  (iter _display row [
    (iter row col
      (put col))
    (putln "")
  ])
])

(fn clear [] [
  (loop (:= x 0) (neq x 100) (:= x (+ x 1)) 
    (putln ""))
])

(fn set_pixel [x y value] [
  (assert (eq "int" (type x)) "Pixel X value must be an integer")
  (assert (eq "int" (type y)) "Pixel Y value must be an integer")
  (assert (< x _width) "Pixel X value must be less than the width of the display")
  (assert (< y _height) "Pixel Y value must be less than the height of the display")
  (set (at (at _display y) x) value)
])
